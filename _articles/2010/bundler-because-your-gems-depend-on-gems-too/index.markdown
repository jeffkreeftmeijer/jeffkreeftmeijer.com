<p><a href="http://gembundler.com">Bundler</a> made gem dependencies in Rails projects a lot easier. It creates a &#8220;bubble&#8221; of gems you listed in your <code>Gemfile</code>, which means it only loads the ones you specified. While this might sound annoying, it keeps you from having incomplete gem dependency specifications like you did when you were still using <code>config.gem</code>. This makes it easier to keep your <code>Gemfile</code>  complete and your project simple to get up and running.</p>
<p><img src="http://jeffkreeftmeijer.com/images/bundler.jpg" alt=""></p>
<p>But what about gems themselves? We use the <code>.gemspec</code> file to specify gem dependencies for our gems, which &#8212; when complete &#8212; makes installing and using gems a breeze since it installs all dependencies automatically. Great.</p>
<p>I&#8217;m not talking about <em>using</em> gems, though. I&#8217;m talking about working <em>on</em> and <em>contributing to</em> gems. Your <code>.gemspec</code> doesn&#8217;t help contributors when they clone your project and want to get the tests running, they still have to read through it and install everything manually.</p>
<p>Giving your gem a <code>Gemfile</code> partially solves this problem. If you specify everything your gem depends on in your <code>Gemfile</code>, contributors can quickly install everything they need without having to look anything up. The downside is that now we have two files (the <code>.gemspec</code> and <code>Gemfile</code>) that specify dependencies, which is nasty.</p>
<p>Lucky for you, Bundler loves you. I didn&#8217;t know this, but it can <a href="http://gembundler.com/rubygems.html">read and install gems from your <code>.gemspec</code></a>. To get it up and running, create a <code>Gemfile</code> and add:</p>
<pre><code>gemspec</code></pre>
<p>This will check your <code>.gemspec</code> for runtime and development dependencies (specified with <code>gem.add_runtime_dependency</code> and <code>gem.add_development_dependency</code>) and install them to the correct <a href="http://gembundler.com/groups.html">group</a> when running:</p>
<pre><code>$ bundle install</code></pre>
<p>Now the only place we specify dependencies is in the <code>.gemspec</code>, but Bundler can install everything for us making our gem and its dependencies easy to install for users and contributors.</p>
<p>Oh, since you have a <code>Gemfile</code> in your project now, here&#8217;s a little bonus: You can use <a href="http://envylabs.com/">Envy Labs</a>&#8217; <a href="http://rubytracker.com/">Ruby Tracker</a> to get notified when new versions of your dependencies get released so you can make sure your gem keeps working with the latest stuff. Nice tip, right?</p>